//server161-master node에서

sudo kubeadm init --pod-network-cidr=172.31.0.0/16 --apiserver-advertise-address=218.145.56.73

addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 218.145.56.73:6443 --token pvgym3.9w0qn3b4tgo85bcv \
    --discovery-token-ca-cert-hash sha256:b602ced314a5e4c55c1c58ca7321abb8ec80897d3ae97ad7496b344021716215

root@srv161:~#


//srv162-workder node에서
root@srv162:~# kubeadm join 218.145.56.73:6443 --token pvgym3.9w0qn3b4tgo85bcv \
>     --discovery-token-ca-cert-hash sha256:b602ced314a5e4c55c1c58ca7321abb8ec80897d3ae97ad7496b344021716215
[preflight] Running pre-flight checks
[preflight] Reading configuration from the cluster...
[preflight] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Starting the kubelet
[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...

This node has joined the cluster:
* Certificate signing request was sent to apiserver and a response was received.
* The Kubelet was informed of the new secure connection details.

Run 'kubectl get nodes' on the control-plane to see this node join the cluster.



//serv161-master node에서
kubectl apply -f calico-mkbahk-20210320.yaml


Every 2.0s: kubectl get pods -o wide --all-namespaces                                                                                               srv161: Mon Jun 27 15:11:28 2022

NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE     IP              NODE     NOMINATED NODE   READINESS GATES
kube-system   calico-kube-controllers-69496d8b75-dkl9t   1/1     Running   0          78s     172.31.200.1    srv162   <none>           <none>
kube-system   calico-node-bvnw6                          0/1     Running   0          78s     218.145.56.74   srv162   <none>           <none>
kube-system   calico-node-xztkm                          0/1     Running   0          78s     218.145.56.73   srv161   <none>           <none>
kube-system   coredns-74ff55c5b-f678x                    1/1     Running   0          3m25s   172.31.132.2    srv161   <none>           <none>
kube-system   coredns-74ff55c5b-nl7br                    1/1     Running   0          3m25s   172.31.132.0    srv161   <none>           <none>
kube-system   etcd-srv161                                1/1     Running   0          3m30s   218.145.56.73   srv161   <none>           <none>
kube-system   kube-apiserver-srv161                      1/1     Running   0          3m30s   218.145.56.73   srv161   <none>           <none>
kube-system   kube-controller-manager-srv161             1/1     Running   0          3m30s   218.145.56.73   srv161   <none>           <none>
kube-system   kube-proxy-5fv7q                           1/1     Running   0          2m43s   218.145.56.74   srv162   <none>           <none>
kube-system   kube-proxy-5xn7x                           1/1     Running   0          3m25s   218.145.56.73   srv161   <none>           <none>
kube-system   kube-scheduler-srv161                      1/1     Running   0          3m30s   218.145.56.73   srv161   <none>           <none>

root@srv161:~/KubernetesLearning/K8s-Lab-demo-cluster# kubectl get nodes -o wide
NAME     STATUS   ROLES                  AGE     VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION       CONTAINER-RUNTIME
srv161   Ready    control-plane,master   4m32s   v1.20.0   218.145.56.73   <none>        Ubuntu 18.04.6 LTS   5.4.0-113-generic    docker://20.10.16
srv162   Ready    <none>                 3m33s   v1.20.0   218.145.56.74   <none>        Ubuntu 18.04.6 LTS   4.15.0-187-generic   docker://19.3.8


root@srv161:~/KubernetesLearning/K8s-Lab-demo-cluster# kubectl apply -f metallb-00-namespace.yaml
namespace/metallb-system created

root@srv161:~/KubernetesLearning/K8s-Lab-demo-cluster# kubectl apply -f metallb-01-ConfigMap.yaml
configmap/config created


root@srv161:~/KubernetesLearning/K8s-Lab-demo-cluster# kubectl apply -f metallb-02-install.yaml
podsecuritypolicy.policy/controller created
podsecuritypolicy.policy/speaker created
serviceaccount/controller created
serviceaccount/speaker created
clusterrole.rbac.authorization.k8s.io/metallb-system:controller created
clusterrole.rbac.authorization.k8s.io/metallb-system:speaker created
role.rbac.authorization.k8s.io/config-watcher created
role.rbac.authorization.k8s.io/pod-lister created
role.rbac.authorization.k8s.io/controller created
clusterrolebinding.rbac.authorization.k8s.io/metallb-system:controller created
clusterrolebinding.rbac.authorization.k8s.io/metallb-system:speaker created
rolebinding.rbac.authorization.k8s.io/config-watcher created
rolebinding.rbac.authorization.k8s.io/pod-lister created
rolebinding.rbac.authorization.k8s.io/controller created
daemonset.apps/speaker created
deployment.apps/controller created
root@srv161:~/KubernetesLearning/K8s-Lab-demo-cluster#


Every 2.0s: kubectl get pods -A                                                                                                 srv161: Mon Jul  4 07:58:43 2022

NAMESPACE        NAME                                       READY   STATUS    RESTARTS   AGE
kube-system      calico-kube-controllers-69496d8b75-txbqr   1/1     Running   0          36m
kube-system      calico-node-82pmv                          0/1     Running   0          36m
kube-system      calico-node-97pqd                          0/1     Running   0          36m
kube-system      coredns-74ff55c5b-gpxj7                    1/1     Running   0          44m
kube-system      coredns-74ff55c5b-kslsh                    1/1     Running   0          44m
kube-system      etcd-srv161                                1/1     Running   0          44m
kube-system      kube-apiserver-srv161                      1/1     Running   0          44m
kube-system      kube-controller-manager-srv161             1/1     Running   0          44m
kube-system      kube-proxy-bg8fb                           1/1     Running   0          42m
kube-system      kube-proxy-bghn7                           1/1     Running   0          44m
kube-system      kube-scheduler-srv161                      1/1     Running   0          44m
metallb-system   controller-6b78bff7d9-4wqxt                1/1     Running   0          34s
metallb-system   speaker-7jrgw                              1/1     Running   0          34s
metallb-system   speaker-wpdbr                              1/1     Running   0          34s


root@srv161:~/KubernetesLearning/K8s-Lab-demo-cluster# bash metallb-03-nginx-test-install.sh
deployment.apps/nginx-metallb-test created
service/nginx-metallb-test exposed
NAME                 TYPE           CLUSTER-IP       EXTERNAL-IP     PORT(S)        AGE
kubernetes           ClusterIP      10.96.0.1        <none>          443/TCP        9m35s
nginx-metallb-test   LoadBalancer   10.105.171.229   218.145.56.80   80:31630/TCP   0s
root@srv161:~/KubernetesLearning/K8s-Lab-demo-cluster#

//
//bash completion install
//
kubectl completion bash | sudo tee /etc/bash_completion.d/kubectl > /dev/null
kubeadm completion bash | sudo tee /etc/bash_completion.d/kubeadm > /dev/null

//
//NFS Dynamic Provisioning Install
//
root@srv161:~/KubernetesLearning/SRV161-SRV162-Cluster/nfs-auto-prov# kubectl apply -f nfs-00-rbac.yaml
serviceaccount/nfs-client-provisioner created
clusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner created
clusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner created
role.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created
rolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created
root@srv161:~/KubernetesLearning/SRV161-SRV162-Cluster/nfs-auto-prov# kubectl apply -f nfs-01-storageclass-default.yaml
storageclass.storage.k8s.io/sc-default created
storageclass.storage.k8s.io/sc-fast created
storageclass.storage.k8s.io/sc-bigdata created
storageclass.storage.k8s.io/sc-backup created
root@srv161:~/KubernetesLearning/SRV161-SRV162-Cluster/nfs-auto-prov# kubectl apply -f nfs-02-nfs-ext-provisioner-deployment.yaml
deployment.apps/nfs-client-provisioner created
root@srv161:~/KubernetesLearning/SRV161-SRV162-Cluster/nfs-auto-prov# kubectl apply -f nfs-03-test-pvc-claim-default.yaml
persistentvolumeclaim/pvc-default created
persistentvolumeclaim/pvc-fast created
persistentvolumeclaim/pvc-backup created
persistentvolumeclaim/pvc-bigdata created


root@srv161:~/KubernetesLearning/SRV161-SRV162-Cluster/nfs-auto-prov# kubectl apply -f nfs-04-test-pod-default.yaml
pod/test-nfs-pvc-pod-default created

Every 2.0s: kubectl get pods -A                                                                                                 srv161: Mon Jul  4 08:14:59 2022

NAMESPACE        NAME                                       READY   STATUS      RESTARTS   AGE
default          nfs-client-provisioner-759bc7f67b-sl8wv    1/1     Running     0          9m13s
default          test-nfs-pvc-pod-default                   0/1     Completed   0          7m58s
kube-system      calico-kube-controllers-69496d8b75-txbqr   1/1     Running     0          53m
kube-system      calico-node-82pmv                          0/1     Running     0          53m
kube-system      calico-node-97pqd                          0/1     Running     0          53m
kube-system      coredns-74ff55c5b-gpxj7                    1/1     Running     0          60m
kube-system      coredns-74ff55c5b-kslsh                    1/1     Running     0          60m
kube-system      etcd-srv161                                1/1     Running     0          60m
kube-system      kube-apiserver-srv161                      1/1     Running     0          60m
kube-system      kube-controller-manager-srv161             1/1     Running     0          60m
kube-system      kube-proxy-bg8fb                           1/1     Running     0          58m
kube-system      kube-proxy-bghn7                           1/1     Running     0          60m
kube-system      kube-scheduler-srv161                      1/1     Running     0          60m
metallb-system   controller-6b78bff7d9-4wqxt                1/1     Running     0          16m
metallb-system   speaker-7jrgw                              1/1     Running     0          16m
metallb-system   speaker-wpdbr                              1/1     Running     0          16m

