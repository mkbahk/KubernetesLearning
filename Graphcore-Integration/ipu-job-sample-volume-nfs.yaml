# native Kubernetes volumes which uses NFS
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-shared-storage
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: slow
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    server: nfs-server.default.svc.cluster.local # this should be your NFS server endpoint
    path: "/"   
---
# Persistent Volume Claim 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 5Gi
---
apiVersion: graphcore.ai/v1alpha1 # the API that defined this API object type
kind: IPUJob # the kind of this Kubernetes object
metadata:
  name: ipujob-sample # the name of the job
spec:
  modelReplicas: "4" # how many replicas should the graph model be split into when being processed
  ipusPerModelReplica: "1" # how many IPUs should be assigned to each model replica
  launcher:
    command: # the command to trigger the job execution
      - mpirun 
      - --allow-run-as-root
      - --bind-to 
      - none
      - -np
      - "1"
      - python3 
      - /public_examples/applications/tensorflow/cnns/training/train.py
      - --dataset=cifar-10
      - --synthetic-data 
      - --model-size=8 
      - --batch-size=1 
      - --batches-per-step=10 
      - --gradient-accumulation-count=10
      - --no-validation 
      - --no-stochastic-rounding
      - --iterations=20
  workers:
    replicas: 1 # how many workers (poplar instances) should participate in this execution 
    template: # native Kubernetes pod template. https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
      metadata:
        labels:
          app: resnet-launcher 
      spec:
        volumes: # we define here which volumes we want to use with the workers (the same is applied to the launcher too)
        - name: mypvc 
          persistentVolumeClaim:
            claimName: nfs-pvc # that is the persistent volume claim we created in the above object
          
        containers: # the containers running inside each worker
        - name: resnet
          # TODO: replace this with a publicly accessible image
          image: artifactory-systems.eng.graphcore.ai/vipu-k8s-docker-dev-local/resnet-poplar-2.0:operator
          env: # environment variables set on each worker
          - name: "IPUOF_LOG_LEVEL"
            value: "INFO" 
          - name: "POPLAR_LOG_LEVEL"
            value: "INFO"
          volumeMounts: 
          - name: mypvc # the name of the volume defined in the volumes section
            mountPath: /mnt/sample  # this is where we mount the volume into both workers and the launcher
